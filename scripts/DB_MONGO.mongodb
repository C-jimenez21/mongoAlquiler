use("DB_SQL_ALQUILERV1")

db.createCollection("Cliente");

db.Cliente.insertMany([
{
    ID_Cliente: 1,
    Nombre: "Juan",
    Apellido: "Perez",
    DNI: "12345678",
    Direccion: "Calle 123",
    Telefono: "11111111",
    Email: "juan@example.com"
},
{
    ID_Cliente: 2,
    Nombre: "Maria",
    Apellido: "Lopez",
    DNI: "87654321",
    Direccion: "Avenida 456",
    Telefono: "22222222",
    Email: "maria@example.com"
},
{
    ID_Cliente: 3,
    Nombre: "Pedro",
    Apellido: "Gonzalez",
    DNI: "56789012",
    Direccion: "Plaza 789",
    Telefono: "33333333",
    Email: "pedro@example.com"
},
{
    ID_Cliente: 4,
    Nombre: "Laura",
    Apellido: "Martinez",
    DNI: "09876543",
    Direccion: "Ruta 101",
    Telefono: "44444444",
    Email: "laura@example.com"
},
{
    ID_Cliente: 5,
    Nombre: "Carlos",
    Apellido: "Gomez",
    DNI: "43210987",
    Direccion: "Calle 987",
    Telefono: "55555555",
    Email: "carlos@example.com"
}
]);



db.createCollection("Automovil");

db.Automovil.insertMany([
{
    ID_Automovil: 1,
    Marca: "Toyota",
    Modelo: "Corolla",
    Anio: 2021,
    Tipo: "Sedan",
    Capacidad: 5,
    Precio_Diario: NumberDecimal("50.00")
},
{
    ID_Automovil: 2,
    Marca: "Honda",
    Modelo: "Civic",
    Anio: 2020,
    Tipo: "Sedan",
    Capacidad: 5,
    Precio_Diario: NumberDecimal("45.00")
},
{
    ID_Automovil: 3,
    Marca: "Ford",
    Modelo: "Explorer",
    Anio: 2019,
    Tipo: "SUV",
    Capacidad: 7,
    Precio_Diario: NumberDecimal("60.00")
},
{
    ID_Automovil: 4,
    Marca: "Chevrolet",
    Modelo: "Equinox",
    Anio: 2022,
    Tipo: "SUV",
    Capacidad: 5,
    Precio_Diario: NumberDecimal("55.00")
},
{
    ID_Automovil: 5,
    Marca: "Nissan",
    Modelo: "Sentra",
    Anio: 2022,
    Tipo: "Sedan",
    Capacidad: 4,
    Precio_Diario: NumberDecimal("48.00")
}
]);



db.createCollection("Alquiler");

db.Alquiler.insertMany([
{
    ID_Alquiler: 1,
    ID_Cliente: 1,
    ID_Automovil: 3,
    Fecha_Inicio: ISODate("2023-07-01T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-05T00:00:00Z"),
    Costo_Total: NumberDecimal("240.00"),
    Estado: "Activo"
},
{
    ID_Alquiler: 2,
    ID_Cliente: 2,
    ID_Automovil: 4,
    Fecha_Inicio: ISODate("2023-07-02T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-07T00:00:00Z"),
    Costo_Total: NumberDecimal("275.00"),
    Estado: "Disponible"
},
{
    ID_Alquiler: 3,
    ID_Cliente: 3,
    ID_Automovil: 1,
    Fecha_Inicio: ISODate("2023-07-03T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-06T00:00:00Z"),
    Costo_Total: NumberDecimal("150.00"),
    Estado: "Activo"
},
{
    ID_Alquiler: 4,
    ID_Cliente: 4,
    ID_Automovil: 5,
    Fecha_Inicio: ISODate("2023-07-04T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-08T00:00:00Z"),
    Costo_Total: NumberDecimal("192.00"),
    Estado: "Activo"
},
{
    ID_Alquiler: 5,
    ID_Cliente: 5,
    ID_Automovil: 2,
    Fecha_Inicio: ISODate("2023-07-05T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-09T00:00:00Z"),
    Costo_Total: NumberDecimal("225.00"),
    Estado: "Disponible"
}
]);


db.createCollection("Reserva");

db.Reserva.insertMany([
{
    ID_Reserva: 1,
    ID_Cliente: 2,
    ID_Automovil: 1,
    Fecha_Reserva: ISODate("2023-07-06T00:00:00Z"),
    Fecha_Inicio: ISODate("2023-07-10T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-15T00:00:00Z"),
    Estado: "Pendiente"
},
{
    ID_Reserva: 2,
    ID_Cliente: 3,
    ID_Automovil: 3,
    Fecha_Reserva: ISODate("2023-07-07T00:00:00Z"),
    Fecha_Inicio: ISODate("2023-07-12T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-17T00:00:00Z"),
    Estado: "Pendiente"
},
{
    ID_Reserva: 3,
    ID_Cliente: 4,
    ID_Automovil: 2,
    Fecha_Reserva: ISODate("2023-07-08T00:00:00Z"),
    Fecha_Inicio: ISODate("2023-07-14T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-19T00:00:00Z"),
    Estado: "Pendiente"
},
{
    ID_Reserva: 4,
    ID_Cliente: 5,
    ID_Automovil: 4,
    Fecha_Reserva: ISODate("2023-07-09T00:00:00Z"),
    Fecha_Inicio: ISODate("2023-07-15T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-20T00:00:00Z"),
    Estado: "Pendiente"
},
{
    ID_Reserva: 5,
    ID_Cliente: 1,
    ID_Automovil: 5,
    Fecha_Reserva: ISODate("2023-07-10T00:00:00Z"),
    Fecha_Inicio: ISODate("2023-07-16T00:00:00Z"),
    Fecha_Fin: ISODate("2023-07-21T00:00:00Z"),
    Estado: "Pendiente"
}
]);


db.createCollection("Sucursal");

db.Sucursal.insertMany([
{
    ID_Sucursal: 1,
    Nombre: "Sucursal A",
    Direccion: "Calle Principal 123",
    Telefono: "1111111111"
},
{
    ID_Sucursal: 2,
    Nombre: "Sucursal B",
    Direccion: "Avenida Central 456",
    Telefono: "2222222222"
},
{
    ID_Sucursal: 3,
    Nombre: "Sucursal C",
    Direccion: "Plaza Principal 789",
    Telefono: "3333333333"
},
{
    ID_Sucursal: 4,
    Nombre: "Sucursal D",
    Direccion: "Ruta Secundaria 101",
    Telefono: "4444444444"
},
{
    ID_Sucursal: 5,
    Nombre: "Sucursal E",
    Direccion: "Carretera Principal 987",
    Telefono: "5555555555"
}
]);


// Crear la colección "Sucursal_Automovil" y agregar documentos
use("DB_SQL_ALQUILERV1")
db.createCollection("Sucursal_Automovil");
db.Sucursal_Automovil.insertMany([
    {
        ID_Sucursal: 1,
        ID_Automovil: 1,
        Cantidad_Disponible: 3
    },
    {
        ID_Sucursal: 2,
        ID_Automovil: 2,
        Cantidad_Disponible: 5
    },
    {
        ID_Sucursal: 3,
        ID_Automovil: 3,
        Cantidad_Disponible: 2
    },
    {
        ID_Sucursal: 4,
        ID_Automovil: 4,
        Cantidad_Disponible: 4
    },
    {
        ID_Sucursal: 5,
        ID_Automovil: 5,
        Cantidad_Disponible: 1
    }
]);


db.createCollection("Empleado");

db.Empleado.insertMany([
{
    ID_Empleado: 1,
    Nombre: "Ana",
    Apellido: "Gomez",
    DNI: "123456789",
    Direccion: "Calle 111",
    Telefono: "1111111111",
    Cargo: "Gerente"
},
{
    ID_Empleado: 2,
    Nombre: "Luis",
    Apellido: "Rodriguez",
    DNI: "987654321",
    Direccion: "Avenida 222",
    Telefono: "2222222222",
    Cargo: "Asistente"
},
{
    ID_Empleado: 3,
    Nombre: "Elena",
    Apellido: "Fernandez",
    DNI: "456789012",
    Direccion: "Plaza 333",
    Telefono: "3333333333",
    Cargo: "Vendedor"
},
{
    ID_Empleado: 4,
    Nombre: "Mario",
    Apellido: "Torres",
    DNI: "210987654",
    Direccion: "Ruta 444",
    Telefono: "4444444444",
    Cargo: "Recepcionista"
},
{
    ID_Empleado: 5,
    Nombre: "Carlos",
    Apellido: "Hernandez",
    DNI: "543210987",
    Direccion: "Carretera 555",
    Telefono: "5555555555",
    Cargo: "Chofer"
}
]);



db.createCollection("Registro_Entrega");

db.Registro_Entrega.insertMany([
{
    ID_Registro: 1,
    ID_Alquiler: 1,
    ID_Empleado: 3,
    Fecha_Entrega: ISODate("2023-07-05T00:00:00Z"),
    Combustible_Entregado: NumberDecimal("40.00"),
    Kilometraje_Entregado: 2000
},
{
    ID_Registro: 2,
    ID_Alquiler: 2,
    ID_Empleado: 4,
    Fecha_Entrega: ISODate("2023-07-07T00:00:00Z"),
    Combustible_Entregado: NumberDecimal("30.00"),
    Kilometraje_Entregado: 1800
},
{
    ID_Registro: 3,
    ID_Alquiler: 3,
    ID_Empleado: 1,
    Fecha_Entrega: ISODate("2023-07-06T00:00:00Z"),
    Combustible_Entregado: NumberDecimal("45.00"),
    Kilometraje_Entregado: 2200
},
{
    ID_Registro: 4,
    ID_Alquiler: 4,
    ID_Empleado: 5,
    Fecha_Entrega: ISODate("2023-07-08T00:00:00Z"),
    Combustible_Entregado: NumberDecimal("50.00"),
    Kilometraje_Entregado: 2400
},
{
    ID_Registro: 5,
    ID_Alquiler: 5,
    ID_Empleado: 2,
    Fecha_Entrega: ISODate("2023-07-09T00:00:00Z"),
    Combustible_Entregado: NumberDecimal("35.00"),
    Kilometraje_Entregado: 1900
}
]);



db.createCollection("Registro_Devolucion");

db.Registro_Devolucion.insertMany([
{
    ID_Registro: 1,
    ID_Alquiler: 1,
    ID_Empleado: 3,
    Fecha_Devolucion: ISODate("2023-07-10T00:00:00Z"),
    Combustible_Devuelto: NumberDecimal("10.00"),
    Kilometraje_Devuelto: 2500,
    Monto_Adicional: NumberDecimal("20.00")
},
{
    ID_Registro: 2,
    ID_Alquiler: 2,
    ID_Empleado: 4,
    Fecha_Devolucion: ISODate("2023-07-12T00:00:00Z"),
    Combustible_Devuelto: NumberDecimal("15.00"),
    Kilometraje_Devuelto: 2100,
    Monto_Adicional: NumberDecimal("15.00")
},
{
    ID_Registro: 3,
    ID_Alquiler: 3,
    ID_Empleado: 1,
    Fecha_Devolucion: ISODate("2023-07-11T00:00:00Z"),
    Combustible_Devuelto: NumberDecimal("20.00"),
    Kilometraje_Devuelto: 2300,
    Monto_Adicional: NumberDecimal("25.00")
},
{
    ID_Registro: 4,
    ID_Alquiler: 4,
    ID_Empleado: 5,
    Fecha_Devolucion: ISODate("2023-07-13T00:00:00Z"),
    Combustible_Devuelto: NumberDecimal("25.00"),
    Kilometraje_Devuelto: 2600,
    Monto_Adicional: NumberDecimal("30.00")
},
{
    ID_Registro: 5,
    ID_Alquiler: 5,
    ID_Empleado: 2,
    Fecha_Devolucion: ISODate("2023-07-14T00:00:00Z"),
    Combustible_Devuelto: NumberDecimal("18.00"),
    Kilometraje_Devuelto: 2000,
    Monto_Adicional: NumberDecimal("12.00")
}
]);



//Consultas

/* 1. Recursos: Sql, DTO, JWT (no aplica). */


/* 2. Mostrar todos los clientes registrados en la base de datos.*/
use("DB_SQL_ALQUILERV1");
db.Cliente.find();

/* 3. Obtener todos los automóviles disponibles para alquiler */
use("DB_SQL_ALQUILERV1");
db.Automovil.find();

/* 4. Listar todos los alquileres activos junto con los datos de los clientes relacionados. */
use("DB_SQL_ALQUILERV1");
db.getCollection("Alquiler").aggregate([
    {    
        $lookup:{
            from: "Cliente",
            localField: "ID_Cliente",
            foreignField: "ID_Cliente",
            as: "fk_alquiler_cliente"
        }
    },
    {
        $match: {
          Estado: "Activo"
        }
    },
    {
        $project: {
          "Fecha_Inicio": 0,
          "Fecha_Fin": 0,
          "fk_alquiler_cliente._id": 0
        }
    }
]);

/* 5. Mostrar todas las reservas pendientes con los datos del cliente y el automóvil reservado. */
use("DB_SQL_ALQUILERV1");
db.getCollection("Reserva").aggregate([
    {
        $match: {
          Estado: "Pendiente"
        }
    },
    {    
        $lookup:{
            from: "Cliente",
            localField: "ID_Cliente",
            foreignField: "ID_Cliente",
            as: "fk_cliente"
        }
    },
    {    
        $lookup:{
            from: "Automovil",
            localField: "ID_Automovil",
            foreignField: "ID_Automovil",
            as: "fk_automovil"
        }
    },
    {
        $unwind: "$fk_automovil",
    },
    {
        $unwind: "$fk_cliente"
    }
]);

/* 6. Obtener los detalles del alquiler con el ID_Alquiler específico. */
use("DB_SQL_ALQUILERV1");
db.getCollection("Alquiler").aggregate([
    {    
        $lookup:{
            from: "Cliente",
            localField: "ID_Cliente",
            foreignField: "ID_Cliente",
            as: "fk_alquiler_cliente"
        }
    },
    {
        $match: {
            ID_Alquiler: 5
        }
    }
]);

/* 7. Listar los empleados con el cargo de "Vendedor". */
use("DB_SQL_ALQUILERV1");
db.getCollection("Empleado").aggregate([
    {
        $match: {
            Cargo: "Vendedor"
        }
    }
]);

/* 8. Mostrar la cantidad total de automóviles disponibles en cada
sucursal. */
use("DB_SQL_ALQUILERV1");
db.getCollection("Sucursal_Automovil").aggregate([
    {    
        $lookup:{
            from: "Sucursal",
            localField: "ID_Sucursal",
            foreignField: "ID_Sucursal",
            as: "fk_sucursal"
        }
    },
    {
        $unwind: "$fk_sucursal"
    },
    {
        $group: {
          _id: "$fk_sucursal.Nombre",
          Cantidad_Disponible: {
            $sum: "$Cantidad_Disponible"
          }
        }
    }
]);

/* 9. Obtener el costo total de un alquiler específico. */
use("DB_SQL_ALQUILERV1");
db.Alquiler.find({ ID_Alquiler: 2},{ _id: 0, ID_Cliente_id: 0, Fecha_Inicio: 0, Fecha_Fin: 0,Estado: 0 });

/* 10. Listar los clientes con el DNI específico. */
use("DB_SQL_ALQUILERV1");
db.Cliente.find(
    {
        DNI: "87654321"
    }
);

/* 11. Mostrar todos los automóviles con una capacidad mayor a 5
personas. */
use("DB_SQL_ALQUILERV1");
db.Automovil.find({ Capacidad :{ $gt: 5}});


/* 12. Obtener los detalles del alquiler que tiene fecha de inicio en '2023-07-05'. */
use("DB_SQL_ALQUILERV1");
db.Alquiler.find({Fecha_Inicio:ISODate("2023-07-05")});

/* 13. Listar las reservas pendientes realizadas por un cliente
específico. */
use("DB_SQL_ALQUILERV1");

/* 14. Mostrar los empleados con cargo de "Gerente" o "Asistente". */
//db.inventory.find( { $or: [ { quantity: { $lt: 20 } }, { price: 10 } ] } )
use("DB_SQL_ALQUILERV1");
db.Empleado.find(
    {
        $or: [{Cargo: "Gerente"}, {Cargo: "Asistente"}]
    }
)
/* 15. Obtener los datos de los clientes que realizaron al menos un
alquiler */
use("DB_SQL_ALQUILERV1");
db.getCollection("Alquiler").aggregate([
    {
        $lookup: {
          from: "Cliente",
          localField: "ID_Cliente",
          foreignField: "ID_Cliente",
          as: "fk_Cliente"
        }
    },
    {
        $unwind: "$fk_Cliente"
    },
    {
        $group: {
          _id: "$Cliente",
          Data: {
            $push: "$fk_Cliente"
          }
        }
    },
    {   $project: {
            "Data._id": 0,
        }
    }
])
//Corregir esta consulta


/* 16. Listar todos los automóviles ordenados por marca y modelo. */
use("DB_SQL_ALQUILERV1");
db.Automovil.find();
db.getCollection("Automovil").aggregate([
    {
        $group: {
            _id: "$Marca",
            modelos: {
                $push: "$$ROOT"
            }
        }
    },
    { $sort: {_id: 1} }
])

/* 17. Mostrar la cantidad total de automóviles en cada sucursal junto con su dirección. */
use("DB_SQL_ALQUILERV1");


/* 18. Obtener la cantidad total de alquileres registrados en la base de datos */
use("DB_SQL_ALQUILERV1");


/* 19. Mostrar los automóviles con capacidad igual a 5 personas y que
estén disponibles.*/
use("DB_SQL_ALQUILERV1");

/* 20. Obtener los datos del cliente que realizó la reserva con ID_Reserva específico. */
use("DB_SQL_ALQUILERV1");

/* 21. Listar los alquileres con fecha de inicio entre '2023-07-05' y '2023-07-10'. */
use("DB_SQL_ALQUILERV1");